Object subclass: #CallGraph	instanceVariableNames: 'logText calls'	classVariableNames: ''	package: 'CallGraph'!!CallGraph methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 15:16'!exampleText^ '|java.lang.String:org.clapper.util.html.HTMLUtil.convertCharacterEntities:java.lang.String|STATIC_METHOD|java.lang.String|org.clapper.util.html.test.HTMLEntitiesTest.convertHTMLEntities:47|org.clapper.util.text.XStringBufBase:org.clapper.util.text.XStringBufBase.append:java.lang.String|org.clapper.util.text.XStringBuffer|java.lang.String|org.clapper.util.html.HTMLUtil.convertCharacterEntities:240|java.lang.Appendable:org.clapper.util.text.XStringBuffer.getBufferAsAppendable|org.clapper.util.text.XStringBuffer| |org.clapper.util.text.XStringBufBase.append:469|java.lang.String:org.clapper.util.html.HTMLUtil.convertEntity:java.lang.String|STATIC_METHOD|java.lang.String|org.clapper.util.html.HTMLUtil.convertCharacterEntities:253|java.util.ResourceBundle:org.clapper.util.html.HTMLUtil.getResourceBundle|STATIC_METHOD| |org.clapper.util.html.HTMLUtil.convertEntity:424|java.lang.String:org.clapper.util.html.HTMLUtil.textFromHTML:java.lang.String|STATIC_METHOD|java.lang.String|org.clapper.util.html.test.HTMLEntitiesTest.textFromHTML:82|java.lang.String:org.clapper.util.html.HTMLUtil.stripHTMLTags:java.lang.String|STATIC_METHOD|java.lang.String|org.clapper.util.html.HTMLUtil.textFromHTML:362|org.clapper.util.text.XStringBufBase:org.clapper.util.text.XStringBufBase.append:char|org.clapper.util.text.XStringBuilder|char|org.clapper.util.html.HTMLUtil.stripHTMLTags:142|java.lang.Appendable:org.clapper.util.text.XStringBuilder.getBufferAsAppendable|org.clapper.util.text.XStringBuilder| |org.clapper.util.text.XStringBufBase.append:261|org.clapper.util.text.XStringBufBase:org.clapper.util.text.XStringBufBase.append:char|org.clapper.util.text.XStringBuilder|char|org.clapper.util.html.HTMLUtil.stripHTMLTags:142'! !!CallGraph methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 14:58'!logText	^ logText! !!CallGraph methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 15:19'!initializeFromLog: exampleText 	logText := exampleText.	calls := (Character cr split: self logText) collect: [ :line | JavaCall from: line in: self ]! !!CallGraph methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 15:16'!tenLineExample	<gtExample>	| cg |	cg := CallGraph fromLog: self exampleText.	self assert: cg calls size equals: 10.	^ cg! !!CallGraph methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 14:58'!logText: anObject	logText := anObject! !!CallGraph methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 15:11'!gtCallsFor: aView	<gtView>	^ aView columnedList		title: 'Calls';		priority: 10;		items: [ self calls ];		column: 'Log text' text: [ :each | each logText ]! !!CallGraph methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 15:08'!calls	^ calls! !!CallGraph methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 15:08'!calls: anObject	calls := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CallGraph class	instanceVariableNames: ''!!CallGraph class methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 14:41'!fromLog: exampleText	^ self new		initializeFromLog: exampleText;		yourself! !Object subclass: #JavaCall	instanceVariableNames: 'logText callGraph'	classVariableNames: ''	package: 'CallGraph'!!JavaCall methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 15:09'!logText	^ logText! !!JavaCall methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 15:19'!callGraph	^ callGraph! !!JavaCall methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 15:19'!callGraph: aCallGraph	callGraph := aCallGraph! !!JavaCall methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 15:21'!initializeFrom: line in: aCallGraph	self logText: line.	self callGraph: aCallGraph.	! !!JavaCall methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 15:09'!logText: line	logText := line! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!JavaCall class	instanceVariableNames: ''!!JavaCall class methodsFor: 'accessing' stamp: 'GlamorousAuthor 11/21/2022 15:21'!from: line in: aCallGraph	^ self new		initializeFrom: line in: aCallGraph;		yourself! !